/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanModelExpressions.java
 *
 * Created on 31/08/2011, 18:34:59
 */
package GUIs;

import DatabaseMathExpressions.DBFuntions;
import DatabaseMathExpressions.ModelExpression;
import DatabaseMathExpressions.TextualRepresentation;
import GUIs.Util.MyTableModel;
import MathExpression.Data.DMathExpression;
import MathExpression.Graphics.GMathExpression;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author frank.aguilar
 */
public class PanModelExpressions extends javax.swing.JPanel 
implements ListSelectionListener{
    private DBFuntions databaseFunctions;
    private String[] columnNames={"ID","Category","Textual representation"};
    private ModelExpression selectedModel;

    /** Creates new form PanModelExpressions */
    public PanModelExpressions() {
        initComponents();
        initAttributes();
    }

    private void initAttributes(){
        databaseFunctions=null;
        this.modelsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ListSelectionModel rowSM = modelsTable.getSelectionModel();
        rowSM.addListSelectionListener(this);
        selectedModel=null;
    }
    
    public DBFuntions getDatabaseFunctions() {
        return databaseFunctions;
    }

    public void setDatabaseFunctions(DBFuntions dBFuntions) {
        this.databaseFunctions = dBFuntions;
    }

    public void chargeModelExpressions(){
        ArrayList<ModelExpression> expressionsForUser = databaseFunctions.getModelExpressions();
        Object[][] data=preprocessMyDataForTable(expressionsForUser);
        MyTableModel tableModel=new MyTableModel(columnNames,data);
        this.modelsTable.setModel(tableModel);
        modelsTable.repaint();
    }
    
    private Object[][] preprocessMyDataForTable(ArrayList<ModelExpression> modelExpressions){
        Object[][] data=new Object[modelExpressions.size()][columnNames.length];
        Integer modelID;
        String categoria=null;
        TextualRepresentation textualRepresentation;
        int i=0;
        for (ModelExpression model : modelExpressions) {
            modelID=model.getId();
            categoria=model.getCategory();
            textualRepresentation=model.getTextualRepresentation();
            Object[] obj={modelID,categoria,textualRepresentation.toString()};
            data[i]=obj;
            i++;
        }
        return data;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        modelsTable = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        panShowModel = new GUIs.InputOfExpressions.PanControlInputMathExpressions();
        jPanel4 = new javax.swing.JPanel();
        save = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(800, 504));

        jPanel2.setPreferredSize(new java.awt.Dimension(500, 500));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(200, 477));

        modelsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(modelsTable);

        delete.setText("Delete");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(delete)
                .addContainerGap())
        );

        jPanel2.add(jPanel1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());
        jPanel3.add(panShowModel, java.awt.BorderLayout.CENTER);

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(576, Short.MAX_VALUE)
                .addComponent(save))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(save))
        );

        jPanel3.add(jPanel4, java.awt.BorderLayout.SOUTH);

        jSplitPane1.setRightComponent(jPanel3);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        // TODO add your handling code here:
        if(selectedModel!=null){
            int idModel=selectedModel.getId();
            databaseFunctions.deleteModelByID(idModel);
            panShowModel.clearPanel();
            chargeModelExpressions();
            selectedModel=null;
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        if(selectedModel!=null){
            int idModel=selectedModel.getId();
            selectedModel.setdMathExpression(panShowModel.getPanWriting().getgMathExpressionWritten());
            DMathExpression mathExpression=(DMathExpression) selectedModel.getdMathExpression().clone();
            databaseFunctions.updateMathExpressionOfModel(idModel, mathExpression);
        }
    }//GEN-LAST:event_saveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable modelsTable;
    private GUIs.InputOfExpressions.PanControlInputMathExpressions panShowModel;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables

    public void valueChanged(ListSelectionEvent lse) {
        if (lse.getValueIsAdjusting()) return;
            int idColumn=0;
            ListSelectionModel lsm = (ListSelectionModel)lse.getSource();
            if (lsm.isSelectionEmpty()) {
                System.out.println("No rows are selected.");
            } else {
                int selectedRow = lsm.getMinSelectionIndex();
                Object id=this.modelsTable.getModel().getValueAt(selectedRow,idColumn);
                selectedModel=databaseFunctions.getModelByID((Integer)id);
                //((GMathExpression) selectedModel.getdMathExpression()).showJustMathExpression();
                panShowModel.setDrawable((GMathExpression) selectedModel.getdMathExpression().clone());
                panShowModel.repaint();
            }
    }
}
