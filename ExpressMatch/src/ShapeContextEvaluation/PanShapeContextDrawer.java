/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanShapeContextDrawer.java
 *
 * Created on Jan 6, 2012, 7:22:28 PM
 */

package ShapeContextEvaluation;

import Graph.Vertex;
import MathExpression.Graphics.GMathExpression;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Point2D;
import javax.swing.JFrame;

/**
 *
 * @author frank
 */
public class PanShapeContextDrawer extends javax.swing.JPanel {

    private ShapeContextDrawer drawer;
    private GMathExpression mathExpression;
    /** Creates new form PanShapeContextDrawer */
    public PanShapeContextDrawer() {
        initComponents();
        drawer=null;
        mathExpression=null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 2400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        if(mathExpression!=null){
            mathExpression.showJustMathExpression();
            Color c=g.getColor();
            g.setColor(Color.GRAY);
            mathExpression.drawGMathExpression(g);
            g.setColor(c);
        }
        
        if(drawer!= null){
            drawer.draw((Graphics2D)g);
        }

    }

    

    public ShapeContextDrawer getDrawer() {
        return drawer;
    }

    public void setDrawer(ShapeContextDrawer drawer) {
        this.drawer = drawer;
    }

    public GMathExpression getMathExpression() {
        return mathExpression;
    }

    public void setMathExpression(GMathExpression mathExpression) {
        this.mathExpression = mathExpression;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
