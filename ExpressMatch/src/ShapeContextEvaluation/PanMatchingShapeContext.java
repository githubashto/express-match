/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanMatchingShapeContext.java
 *
 * Created on Jan 7, 2012, 1:25:33 PM
 */

package ShapeContextEvaluation;

import Graph.Vertex;
import MathExpression.Data.DMathExpression;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Point2D;
import javax.swing.JFrame;

/**
 *
 * @author frank
 */
public class PanMatchingShapeContext extends javax.swing.JPanel {

    private ShapeContextMatchingDrawer drawer;

    public static DMathExpression matchingModel=null;

    public static DMathExpression matchingInstance=null;
    /** Creates new form PanMatchingShapeContext */
    public PanMatchingShapeContext() {
        initComponents();
        drawer=null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 877, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

     @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        if(drawer!= null){
            drawer.draw((Graphics2D)g);
        }
    }

    public ShapeContextMatchingDrawer getDrawer() {
        return drawer;
    }

    public void setDrawer(ShapeContextMatchingDrawer drawer) {
        this.drawer = drawer;
    }

//    public static void showGUI(Vertex [] vertexList1,Vertex [] vertexList2,
//            int[][] matching){
    public static void showGUI(Point2D[] pointsShape1,Point2D[] pointsShape2,
            int[][] matching){
//        Point2D[] pointsShape1=new Point2D[vertexList1.length];
//        int cont=0;
//        for (Vertex v : vertexList1) {
//            pointsShape1[cont++]=new Point2D.Double(v.getX(),v.getY());
//        }
//
//        Point2D[] pointsShape2=new Point2D[vertexList2.length];
//        cont=0;
//        for (Vertex v : vertexList2) {
//            pointsShape2[cont++]=new Point2D.Double(v.getX(),v.getY());
//        }

        ShapeContextMatchingDrawer drawer=new ShapeContextMatchingDrawer();
        drawer.setMatching(matching);
        drawer.setShape1(pointsShape1);
        drawer.setShape2(pointsShape2);


        PanMatchingShapeContext pan=new PanMatchingShapeContext();
        pan.setDrawer(drawer);

        JFrame frm=new JFrame();
        frm.setContentPane(pan);
        frm.pack();
        frm.setVisible(true);

        int x=0;
        x++;

        frm.dispose();

    }
}
